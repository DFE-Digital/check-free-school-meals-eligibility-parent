pr:
  - main

pool:
  name: Azure Pipelines
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
  - stage: BuildApp
    displayName: Build App
    jobs:
      #- template: templates/app-build.yml@templates
      - job:
        pool:
          name: Azure Pipelines
          vmImage: 'windows-latest'
        steps:
          - task: NuGetToolInstaller@1

          - task: NuGetCommand@2
            inputs:
              restoreSolution: '$(solution)'

          - task: VSBuild@1
            inputs:
              solution: '$(solution)'
              msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
              platform: '$(buildPlatform)'
              configuration: '$(buildConfiguration)'

          - task: VSTest@2
            inputs:
              platform: '$(buildPlatform)'
              configuration: '$(buildConfiguration)'

          - task: DotNetCoreCLI@2
            inputs:
              command: publish
              publishWebProjects: True
              arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
              zipAfterPublish: True
  - stage: RunCypressTests
    displayName: Run Cypress Tests
    jobs:
    - job: 'SetUpCypress'
      displayName: 'SetUpTests'
      pool:
        vmImage: ubuntu-latest
      steps:
      - task: Bash@3
        inputs:
          targetType: inline
          script: |
           cd tests
           npm install
      - task: Bash@3
        displayName: 'RunTests'
        inputs:
         targetType: inline
         script: |
          cd tests
          export CYPRESS_API_HOST="$(CYPRESS_API_HOST)"
          export CYPRESS_JWT_USERNAME=$(JWT_USERNAME)
          export CYPRESS_JWT_PASSWORD="$(JWT_PASSWORD)"
          npm run e2e:chrome

      - task: Bash@3
        condition: always()
        displayName: 'Generate report'
        inputs:
         targetType: inline
         script: |
          cd tests
          npm run combine:reports

      - task: PublishTestResults@2
        condition: always()
        displayName: 'Publish test results'
        inputs:
         testResultsFiles: '**/combined-report.xml'
         searchFolder: 'tests'